<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:security="http://www.springframework.org/schema/security"
xsi:schemaLocation="http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd">

	<security:http><!-- 스프링 시큐리티가 http에서 알 수 있게 하는 시작 시점 설정 -->
	<security:intercept-url pattern="/sample/all" access="permitAll" />
	<!-- url 매핑주소에 접근할 때 인터셉터 (가로채기)를 이용해서 접근을 제한하는 설정은 security:intercept-url을 사용한다.
	pattern 속성값으로는 컨트롤러에 지정한 매핑주소가 들어간다. access속성값에는 권한 범위를 설정한다. 
	permitAll은 모든 사용자를 허용한다. -->
	<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />
	<!-- ROLE_MEMBER는 로그인 한 사용자만 접근할 수 있다.  -->
	
	<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
	<!-- 로그인 한 사용자들 중에서 관리자 권한을 가진 사용자만이 접근할 수 있다.  -->
	
	<security:form-login /><!-- 시큐리티 폼로그인 설정  => 스프링 시큐리티 내장 폼 로그인 실행 -->
		
	</security:http>
	
	<security:authentication-manager> <!-- 스프링 시큐리티가 동작하기 위해서는 authentication-manager
	인 인증관리자 설정 -->
	<security:authentication-provider><!-- 인증 제공자 -->
		<security:user-service>
			<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
			<!-- 아이디가 member, 비번이 member인 사용자는 로그인 인증 처리를 한다. {noop}는 비번을 인코딩 즉
			암호화 처리 없이 사용한다. -->
			
			<security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN,ROLE_MEMBER"/>
			<!-- 아이디가 admin,비번이 admin인 사용자는 /sample/member와 /sample/admin에 모두 접근 가능하다. -->
		</security:user-service>
	</security:authentication-provider>
	</security:authentication-manager>
</beans>
